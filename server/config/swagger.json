{
  "swagger": "2.0",
  "info": {
    "description": "SendIT is a courier service that helps users deliver parcels to different destinations. The API is hosted on Heroku [https://fcode-send-it.herokuapp.com/]",
    "version": "1.0.0",
    "title": "SendIT",
    "contact": {
      "email": "senditparcels2018@gmail.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host": "https://fcode-send-it.herokuapp.com",
  "basePath": "/api/v1",
  "tags": [
    {
      "name": "user",
      "description": "User can signup, login, and reset password"
    },
    {
      "name": "orders",
      "description": "place a parcel delivery order"
    }
  ],
  "schemes": [
    "https",
    "http"
  ],
  "paths": {
    "/auth/signup": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Create a new user",
        "description": "User can sign up",
        "operationId": "create",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Created user object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "You have successfully signed up"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "User can login",
        "description": "Users (both customers and admin) can login through this",
        "operationId": "logn",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Login object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "You have successfully log in"
          }
        }
      }
    },
    "/auth/forgotPassword": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "User forgot password",
        "description": "User can request to reset password.",
        "operationId": "forgotPassword",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Please check your mail for further instructions to reset your password"
          }
        }
      }
    },
    "/auth/resetPassword/{resetToken}": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "User reset password with the reset token",
        "description": "User reset password with the reset token",
        "operationId": "resetPassword",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "resetToken",
            "in": "path",
            "description": "Token for password reset",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "You have successfully changed your password. You can now log in with your new password"
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get all users",
        "description": "Returns a array of user object",
        "operationId": "getAllUser",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          },
          "404": {
            "description": "users not found"
          }
        },
        "security": [
          {
            "api_key": [
              "type:jwt",
              "name:Authorization"   
            ]
          }
        ]
      }
    },
    "/users/{userId}": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get user by ID",
        "description": "Get a user by ID",
        "operationId": "getOneUser",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "User ID",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          },
          "404": {
            "description": "users not found"
          }
        },
        "security": [
          {
            "api_key": [
              "type:jwt",
              "name:Authorization"             
            ]
          }
        ]
      }
    },
    "/parcels": {
      "post": {
        "tags": [
          "orders"
        ],
        "summary": "Create a new parcel delivery order",
        "description": "Create a new parcel delivery order",
        "operationId": "createOrder",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "adds a new parcel delivery order",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Order"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "order created successully"
          },
          "500": {
            "description": "can not create order"
          }
        },
        "security": [
          {
            "api_key": [
              "type:jwt",
              "name:Authorization"   
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "orders"
        ],
        "summary": "Get all parcel delivery orders",
        "description": "Get all parcel delivery orders",
        "operationId": "getAllOrders",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "orders not found"
          },
          "500": {
            "description": "could not get the orders"
          }
        },
        "security": [
          {
            "api_key": [
              "type:jwt",
              "name:Authorization"   
            ]
          }
        ]
      }
    },
    "/parcels/{parcelId}": {
      "get": {
        "tags": [
          "orders"
        ],
        "summary": "Get parcel by ID",
        "description": "Get parcel by ID",
        "operationId": "getOneOrder",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parcelId",
            "in": "path",
            "description": "ID of parcel to fetch",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/Order"
              }
            }
          },
          "404": {
            "description": "order not found"
          },
          "500": {
            "description": "could not get the order"
          }
        },
        "security": [
          {
            "api_key": [
              "type:jwt",
              "name:Authorization"   
            ]
          }
        ]
      }
    },
    "/users/{userId}/parcels": {
      "get": {
        "tags": [
          "orders"
        ],
        "summary": "Returns all the parcel delivery orders by a user",
        "description": "Returns all the parcel delivery orders by a user",
        "operationId": "getOrdersbyUser",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "User ID",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Order"
              }
            }
          },
          "404": {
            "description": "user orders not found"
          },
          "500": {
            "description": "could not get user orders"
          }
        },
        "security": [
          {
            "api_key": [
              "type:jwt",
              "name:Authorization"   
            ]
          }
        ]
      }
    },
    "/parcels/{parcelId}/cancel": {
      "put": {
        "tags": [
          "orders"
        ],
        "summary": "User cancels a parcel delivery order",
        "description": "User cancels a parcel delivery order that is yet to be delivered",
        "operationId": "cancelOrder",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parcelId",
            "in": "path",
            "description": "parcel ID",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "order cancelled true"
          },
          "404": {
            "description": "order not found"
          },
          "500": {
            "description": "could not cancell order"
          }
        },
        "security": [
          {
            "api_key": [
              "type:jwt",
              "name:Authorization"   
            ]
          }
        ]
      }
    },
    "/parcels/{parcelId}/destination": {
      "put": {
        "tags": [
          "orders"
        ],
        "summary": "User changes the destination of his order",
        "description": "User changes the destination a parcel delivery order that is yet to be delivered",
        "operationId": "changeOrderDestination",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parcelId",
            "in": "path",
            "description": "parcel ID",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "body",
            "description": "the new destination object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Order"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "404": {
            "description": "order not found"
          },
          "500": {
            "description": "could not change order destination"
          }
        },
        "security": [
          {
            "api_key": [
              "type:jwt",
              "name:Authorization"   
            ]
          }
        ]
      }
    },
    "/parcels/{parcelId}/status": {
      "put": {
        "tags": [
          "orders"
        ],
        "summary": "Admin updates the status of an order",
        "description": "Admin updates the status of an order",
        "operationId": "changeOrderStatus",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parcelId",
            "in": "path",
            "description": "parcel ID",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "body",
            "description": "the new destination object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Order"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "order not found"
          },
          "500": {
            "description": "could not update order status"
          }
        },
        "security": [
          {
            "api_key": [
              "type:jwt",
              "name:Authorization"   
            ]
          }
        ]
      }
    },
    "/parcels/{parcelId}/location": {
      "put": {
        "tags": [
          "orders"
        ],
        "summary": "Admin updates the present location of an order",
        "description": "Admin updates the present location of an order",
        "operationId": "changeOrderPresentLocation",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parcelId",
            "in": "path",
            "description": "parcel ID",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "body",
            "description": "the new present location object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Order"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "order not found"
          },
          "500": {
            "description": "could not change order present location"
          }
        },
        "security": [
          {
            "api_key": [
              "type:jwt",
              "name:Authorization"   
            ]
          }
        ]
      }
    }
  },
  "securityDefinitions": {
    "api_key": {
      "type": "apiKey",
      "name": "api_key",
      "in": "header"
    }
  },
  "definitions": {
    "Order": {
      "type": "object",
      "required": [
        "weight",
        "distance",
        "description",
        "pickup",
        "destination",
        "receiver_name",
        "receiver_phone"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "weight": {
          "type": "number",
          "format": "float"
        },
        "price": {
          "type": "number",
          "format": "float"
        },
        "distance": {
          "type": "number",
          "format": "float"
        },
        "description": {
          "type": "string",
          "description": "parcel description"
        },
        "pickup": {
          "type": "string",
          "description": "pickup location for the parcel"
        },
        "destination": {
          "type": "string",
          "description": "parcel delivery destination"
        },
        "location": {
          "type": "string",
          "description": "present location of the parcel"
        },
        "receiver_name": {
          "type": "string",
          "description": "receiver name"
        },
        "receiver_phone": {
          "type": "string",
          "description": "receiver phone number"
        },
        "status": {
          "type": "string",
          "description": "Order Status",
          "enum": [
            "pending",
            "intransit",
            "delivered"
          ]
        },
        "cancelled": {
          "type": "boolean",
          "default": false
        },
        "userId": {
          "type": "integer",
          "format": "int64",
          "description": "ID of the user that created the parcel order"
        },
        "created_on": {
          "type": "string",
          "format": "date-time"
        },
        "updated_on": {
          "type": "string",
          "format": "date-time"
        }
      },
      "xml": {
        "name": "Order"
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "firstname": {
          "type": "string"
        },
        "lastname": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "usertype": {
          "type": "string",
          "description": "User type",
          "default": "user",
          "enum": [
            "user",
            "admin"
          ]
        },
        "created_on": {
          "type": "string",
          "format": "date-time"
        },
        "updated_on": {
          "type": "string",
          "format": "date-time"
        },
        "last_login": {
          "type": "string",
          "format": "date-time"
        }
      },
      "xml": {
        "name": "User"
      }
    },
    "ApiResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    }
  }
}