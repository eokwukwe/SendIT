{"version":3,"sources":["orderValidation.js"],"names":["validateOrder","validOrder","isLength","min","withMessage","isString","trim","isDecimal","matches","isAlpha"],"mappings":";;;;;;AAAA;;AAEA,IAAMA,gBAAgB;AACpBC,cAAY,CACV,kBAAM,mBAAN,EACGC,QADH,CACY,EAAEC,KAAK,EAAP,EADZ,EAEGC,WAFH,CAEe,8BAFf,EAGGC,QAHH,GAIGC,IAJH,EADU,EAOV,kBAAM,cAAN,EACGC,SADH,GAEGH,WAFH,CAEe,8BAFf,EAGGE,IAHH,EAPU,EAYV,kBAAM,aAAN,EACGJ,QADH,CACY,EAAEC,KAAK,CAAP,EADZ,EAEGC,WAFH,CAEe,sBAFf,EAGGI,OAHH,CAGW,oBAHX,EAIGJ,WAJH,CAIe,6CAJf,EAKGE,IALH,EAZU,EAmBV,kBAAM,UAAN,EACGJ,QADH,CACY,EAAEC,KAAK,CAAP,EADZ,EAEGC,WAFH,CAEe,wBAFf,EAGGK,OAHH,GAIGL,WAJH,CAIe,4BAJf,EAKGE,IALH,EAnBU,EA0BV,kBAAM,aAAN,EACGJ,QADH,CACY,EAAEC,KAAK,CAAP,EADZ,EAEGC,WAFH,CAEe,2BAFf,EAGGK,OAHH,GAIGL,WAJH,CAIe,+BAJf,EAKGE,IALH,EA1BU,EAiCV,kBAAM,WAAN,EACGJ,QADH,CACY,EAAEC,KAAK,CAAP,EADZ,EAEGC,WAFH,CAEe,sBAFf,EAGGI,OAHH,CAGW,mBAHX,EAIGJ,WAJH,CAIe,6CAJf,EAKGE,IALH,EAjCU,EAwCV,kBAAM,QAAN,EACGJ,QADH,CACY,EAAEC,KAAK,CAAP,EADZ,EAEGC,WAFH,CAEe,wBAFf,EAGGK,OAHH,GAIGL,WAJH,CAIe,4BAJf,EAKGE,IALH,EAxCU,EA+CV,kBAAM,WAAN,EACGJ,QADH,CACY,EAAEC,KAAK,CAAP,EADZ,EAEGC,WAFH,CAEe,wBAFf,EAGGK,OAHH,GAIGL,WAJH,CAIe,+BAJf,EAKGE,IALH,EA/CU,EAsDV,kBAAM,UAAN,EACGJ,QADH,CACY,EAAEC,KAAK,CAAP,EADZ,EAEGC,WAFH,CAEe,gBAFf,EAGGC,QAHH,GAIGD,WAJH,CAIe,gCAJf,EAKGE,IALH,EAtDU,EA6DV,kBAAM,eAAN,EACGE,OADH,CACW,+DADX,EAEGJ,WAFH,CAEe,sBAFf,EAGGE,IAHH,EA7DU;AADQ,CAAtB;;kBAqEeN,a","file":"orderValidation.js","sourceRoot":"/home/okwukwe/Desktop/Andela/sendIT/server/middleware","sourcesContent":["import { check } from 'express-validator/check';\n\nconst validateOrder = {\n  validOrder: [\n    check('parcelDescription')\n      .isLength({ min: 10 })\n      .withMessage('The description is too short')\n      .isString()\n      .trim(),\n\n    check('parcelWeight')\n      .isDecimal()\n      .withMessage('weight must be decimal value')\n      .trim(),\n\n    check('fromAddress')\n      .isLength({ min: 5 })\n      .withMessage('address is too short')\n      .matches(/^[a-zA-Z-\\d,]+\\s+$/)\n      .withMessage('invalid input, please enter a valid address')\n      .trim(),\n\n    check('fromCity')\n      .isLength({ min: 3 })\n      .withMessage('City name is too short')\n      .isAlpha()\n      .withMessage('city name cannot be number')\n      .trim(),\n\n    check('fromCountry')\n      .isLength({ min: 3 })\n      .withMessage('country name is too short')\n      .isAlpha()\n      .withMessage('country name cannot be number')\n      .trim(),\n\n    check('toAddress')\n      .isLength({ min: 5 })\n      .withMessage('address is too short')\n      .matches(/^[a-zA-Z-\\d,\\s]+$/)\n      .withMessage('invalid input, please enter a valid address')\n      .trim(),\n\n    check('toCity')\n      .isLength({ min: 3 })\n      .withMessage('City name is too short')\n      .isAlpha()\n      .withMessage('city name cannot be number')\n      .trim(),\n\n    check('toCountry')\n      .isLength({ min: 3 })\n      .withMessage('City name is too short')\n      .isAlpha()\n      .withMessage('country name cannot be number')\n      .trim(),\n\n    check('receiver')\n      .isLength({ min: 2 })\n      .withMessage('name too short')\n      .isString()\n      .withMessage('receiver name cannot be number')\n      .trim(),\n\n    check('receiverPhone')\n      .matches(/^[0][7-9]{1}[0-1]{1}[\\s]?[0-9][-\\s.]?[0-9]{3}[-\\s.]?[0-9]{4}$/)\n      .withMessage('invalid phone number')\n      .trim()\n  ]\n};\n\nexport default validateOrder;\n"]}