{"version":3,"sources":["server.js"],"names":["dotenv","config","app","use","bodyParser","json","urlencoded","extended","indexRoute","orderRoutes","userRoutes","req","res","next","status","message","error","listen","port","console","log"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAIA;;;;AAUA;;;;AACA;;;;AACA;;;;;;AAdAA,iBAAOC,MAAP;;AAIA,IAAMC,MAAM,wBAAZ;;AAEAA,IAAIC,GAAJ,CAAQ,sBAAO,KAAP,CAAR;AACAD,IAAIC,GAAJ,CAAQC,qBAAWC,IAAX,EAAR;AACAH,IAAIC,GAAJ,CAAQC,qBAAWE,UAAX,CAAsB,EAAEC,UAAU,KAAZ,EAAtB,CAAR;AACAL,IAAIC,GAAJ,CAAQ,qBAAR;;AAEA;;AAIAD,IAAIC,GAAJ,CAAQ,SAAR,EAAmBK,eAAnB;AACAN,IAAIC,GAAJ,CAAQ,SAAR,EAAmBM,eAAnB;AACAP,IAAIC,GAAJ,CAAQ,SAAR,EAAmBO,cAAnB;;AAEA;AACAR,IAAIC,GAAJ,CAAQ,UAACQ,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC3BA,MACCD,IAAIE,MAAJ,CAAW,GAAX,EAAgBT,IAAhB,CAAqB;AACpBU,WAAS;AADW,EAArB,CADD;AAKA,CAND;;AAQA;AACAb,IAAIC,GAAJ,CAAQ,UAACa,KAAD,EAAQL,GAAR,EAAaC,GAAb,EAAqB;AAC5BA,KAAIE,MAAJ,CAAWE,MAAMF,MAAN,IAAgB,GAA3B;AACAF,KAAIP,IAAJ,CAAS;AACRW,SAAO;AACND,YAASC,MAAMD;AADT;AADC,EAAT;AAKA,CAPD;;AASAb,IAAIe,MAAJ,CAAWhB,iBAAOiB,IAAlB,EAAwB,YAAM;AAC7BC,SAAQC,GAAR,yCAAkDnB,iBAAOiB,IAAzD;AACA,CAFD;;kBAIehB,G","file":"server.js","sourceRoot":"/home/okwukwe/Desktop/Andela/sendIT/server","sourcesContent":["import express from 'express';\nimport bodyParser from 'body-parser';\nimport cors from 'cors';\nimport morgan from 'morgan';\nimport dotenv from 'dotenv';\n\ndotenv.config();\n\nimport config from './config/config';\n\nconst app = express();\n\napp.use(morgan('dev'));\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: false }));\napp.use(cors());\n\n// Routes\nimport indexRoute from './routes/index';\nimport orderRoutes from './routes/order.route';\nimport userRoutes from './routes/user.route';\napp.use('/api/v1', indexRoute);\napp.use('/api/v1', orderRoutes);\napp.use('/api/v1', userRoutes);\n\n// Handle 404 error\napp.use((req, res, next) => {\n\tnext(\n\t\tres.status(404).json({\n\t\t\tmessage: 'Page not found'\n\t\t})\n\t);\n});\n\n// Error handler for all other types of errors\napp.use((error, req, res) => {\n\tres.status(error.status || 500);\n\tres.json({\n\t\terror: {\n\t\t\tmessage: error.message\n\t\t}\n\t});\n});\n\napp.listen(config.port, () => {\n\tconsole.log(`SendIT Server is listening on port ${config.port}`);\n});\n\nexport default app;\n"]}