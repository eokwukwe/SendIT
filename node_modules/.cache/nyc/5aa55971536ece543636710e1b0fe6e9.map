{"version":3,"sources":["userValidation.js"],"names":["validateUser","validSignup","isAlpha","withMessage","isLength","min","trim","isEmail","matches","custom","value","req","body","confirmPassword","validLogin"],"mappings":";;;;;;AAAA;;AAEA,IAAMA,eAAe;AACnBC,eAAa,CACX,kBAAM,OAAN,EACGC,OADH,GAEGC,WAFH,CAEe,iCAFf,EAGGC,QAHH,CAGY,EAAEC,KAAK,CAAP,EAHZ,EAIGF,WAJH,CAIe,oCAJf,EAKGG,IALH,EADW,EAQX,kBAAM,OAAN,EACGJ,OADH,GAEGC,WAFH,CAEe,iCAFf,EAGGC,QAHH,CAGY,EAAEC,KAAK,CAAP,EAHZ,EAIGF,WAJH,CAIe,oCAJf,EAKGG,IALH,EARW,EAeX,kBAAM,KAAN,EACGC,OADH,GAEGJ,WAFH,CAEe,eAFf,EAGGG,IAHH,EAfW,EAoBX,kBAAM,UAAN,EACGF,QADH,CACY,EAAEC,KAAK,CAAP,EADZ,EAEGF,WAFH,CAEe,mDAFf,EAGGK,OAHH,CAGW,oCAHX,EAIGL,WAJH,CAIe,yEAJf,EAKGM,MALH,CAKU,UAACC,KAAD,QAAoB;AAAA,QAAVC,GAAU,QAAVA,GAAU;;AAC1B,QAAID,UAAUC,IAAIC,IAAJ,CAASC,eAAvB,EAAwC;AACtC,aAAO,KAAP;AACD;AACD,WAAOH,KAAP;AACD,GAVH,EAWGP,WAXH,CAWe,2BAXf,EAYGG,IAZH,EApBW,CADM;;AAoCnBQ,cAAY,CACV,kBAAM,KAAN,EACGP,OADH,GAEGJ,WAFH,CAEe,eAFf,EAGGG,IAHH,EADU,EAMV,kBAAM,UAAN,EACGF,QADH,CACY,EAAEC,KAAK,CAAP,EADZ,EAEGF,WAFH,CAEe,4BAFf,CANU;AApCO,CAArB;;kBAgDeH,Y","file":"userValidation.js","sourceRoot":"/home/okwukwe/Desktop/Andela/sendIT/server/middleware","sourcesContent":["import { check } from 'express-validator/check';\n\nconst validateUser = {\n  validSignup: [\n    check('fname')\n      .isAlpha()\n      .withMessage('Must be only alphabetical chars')\n      .isLength({ min: 3 })\n      .withMessage('name must be at least 3 chars long')\n      .trim(),\n\n    check('lname')\n      .isAlpha()\n      .withMessage('Must be only alphabetical chars')\n      .isLength({ min: 3 })\n      .withMessage('name must be at least 3 chars long')\n      .trim(),\n\n    check('eml')\n      .isEmail()\n      .withMessage('invalid email')\n      .trim(),\n\n    check('password')\n      .isLength({ min: 6 })\n      .withMessage('Password must be at least 6 characters in length.')\n      .matches(/^[0-9a-zA-Z\"#$&()%;,_@+|?!Â£^.*-]+$/)\n      .withMessage('Password must contain at least one Uppercase, one number and one symbol')\n      .custom((value, { req }) => {\n        if (value !== req.body.confirmPassword) {\n          return false;\n        }\n        return value;\n      })\n      .withMessage('Passwords does not match.')\n      .trim()\n  ],\n\n  validLogin: [\n    check('eml')\n      .isEmail()\n      .withMessage('invalid email')\n      .trim(),\n\n    check('password')\n      .isLength({ min: 1 })\n      .withMessage('please enter your password')\n  ]\n};\n\nexport default validateUser;\n"]}